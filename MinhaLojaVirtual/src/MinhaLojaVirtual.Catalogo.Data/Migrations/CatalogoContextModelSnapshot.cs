// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinhaLojaVirtual.Catalogo.Data;

namespace MinhaLojaVirtual.Catalogo.Data.Migrations
{
    [DbContext(typeof(CatalogoContext))]
    partial class CatalogoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MinhaLojaVirtual.Catalogo.Domain.Categoria", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("varbinary(16)");

                    b.Property<int>("Codigo")
                        .HasColumnName("codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id")
                        .HasName("pk_categorias");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("MinhaLojaVirtual.Catalogo.Domain.Produto", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("varbinary(16)");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ativo")
                        .HasColumnType("bit");

                    b.Property<byte[]>("CategoriaId")
                        .IsRequired()
                        .HasColumnName("categoria_id")
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("data_cadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnName("imagem")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnName("quantidade_estoque")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnName("valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("pk_produtos");

                    b.HasIndex("CategoriaId")
                        .HasName("ix_produtos_categoria_id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("MinhaLojaVirtual.Catalogo.Domain.Produto", b =>
                {
                    b.HasOne("MinhaLojaVirtual.Catalogo.Domain.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("fk_produtos_categorias_categoria_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("MinhaLojaVirtual.Catalogo.Domain.Dimensoes", "Dimensoes", b1 =>
                        {
                            b1.Property<byte[]>("ProdutoId")
                                .HasColumnType("varbinary(16)");

                            b1.Property<int>("Altura")
                                .HasColumnName("Altura")
                                .HasColumnType("int");

                            b1.Property<int>("Largura")
                                .HasColumnName("Largura")
                                .HasColumnType("int");

                            b1.Property<int>("Profundidade")
                                .HasColumnName("Profundidade")
                                .HasColumnType("int");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("dimensoes");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId")
                                .HasConstraintName("fk_produtos_dimensoes_dimensoes_temp_id");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
